@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@500&display=swap');
body {
    background: rgb(19, 19, 19);
    color: #fff;
    font-family: 'Jetbrains Mono', sans-serif;
    background-image: url(../media/old.png);
    
}
.navbar{
  border-radius: 1rem;
  padding: 1rem;
  color: rgba(191, 231, 252, 0.8);
}
 /* animations*/ 
.card {
    display: flex;
    flex-direction: column;
    justify-content: left;
    align-items: left;
    background: #353535;
    font-size: 1.0rem;
    color: #fff;
    box-shadow: rgba(3, 8, 20, 0.1) 0px 0.15rem 0.5rem, rgba(2, 8, 20, 0.1) 0px 0.075rem 0.175rem;
    height: 100%;
    width: 100%;
    border-radius: 1rem;
    transition: all 500ms;
    overflow: hidden;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
 }
  
.card:hover {
    box-shadow: rgba(2, 8, 20, 0.1) 0px 0.35em 1.175em, rgba(2, 8, 20, 0.08) 0px 0.175em 0.5em;
    transform: translateY(-3px) scale(1.1);
 }
 .grid-container {
  padding-top: 1rem;
  height: 100vh;
  margin-bottom: 1rem;
  display: grid;
  gap: 1rem;
  grid-template-areas:
    'a b b c'
    'a b b c'
    'd L L L'
    'd L L L';
  grid-template-rows: repeat(4, 25%);
  grid-template-columns: auto auto auto auto;
  --stagger-delay: 100ms;
}
@keyframes cardEntrance {
  from {
    opacity: 0;
    transform: scale(0.3);
    filter: hue-rotate(180deg);
  }
  to {
    opacity: 1;
    transform: scale(0.8);
    filter: hue-rotate(0deg);
  }
}
.card {
  background-color: rgba(191, 231, 252, 0.8);
  animation: cardEntrance 700ms ease-out;
  animation-fill-mode: backwards;
}
.card:nth-child(1) {
  grid-area: a;
  animation-delay: calc(1 * var(--stagger-delay));
}
.card:nth-child(2) {
  grid-area: b;
  animation-delay: calc(2 * var(--stagger-delay));
}
.card:nth-child(3) {
  grid-area: c;
  animation-delay: calc(3 * var(--stagger-delay));
}
.card:nth-child(4) {
  grid-area: d;
  animation-delay: calc(4 * var(--stagger-delay));
}
.card:last-child {
  grid-area: L;
  animation-delay: calc(5 * var(--stagger-delay));
}
.myself{
  filter: grayscale(100%);
  ;
}
.myself:hover{
  filter: none
}